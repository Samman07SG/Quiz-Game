{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samma\\\\OneDrive\\\\Desktop\\\\New folder (4)\\\\src\\\\components\\\\ProgressBar.js\";\nimport React from 'react';\nimport './ProgressBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = ({\n  progress,\n  currentQuestion,\n  totalQuestions\n}) => {\n  const getProgressColor = progress => {\n    if (progress < 30) return '#f44336';\n    if (progress < 60) return '#ff9800';\n    if (progress < 90) return '#4caf50';\n    return '#2196f3';\n  };\n  const getProgressMessage = progress => {\n    if (progress < 20) return 'Just getting started!';\n    if (progress < 40) return 'Making good progress!';\n    if (progress < 60) return 'Halfway there!';\n    if (progress < 80) return 'Almost done!';\n    if (progress < 100) return 'Final stretch!';\n    return 'Quiz complete!';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"progress-text\",\n          children: [\"Progress: \", currentQuestion, \" of \", totalQuestions, \" questions\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"progress-percentage\",\n          children: [Math.round(progress), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-message\",\n        children: getProgressMessage(progress)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        style: {\n          width: `${progress}%`,\n          backgroundColor: getProgressColor(progress)\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-steps\",\n      children: Array.from({\n        length: totalQuestions\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `progress-step ${index < currentQuestion ? 'completed' : index === currentQuestion - 1 ? 'current' : 'pending'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-number\",\n          children: index < currentQuestion ? '✓' : index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ProgressBar","progress","currentQuestion","totalQuestions","getProgressColor","getProgressMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","round","style","width","backgroundColor","Array","from","length","_","index","_c","$RefreshReg$"],"sources":["C:/Users/samma/OneDrive/Desktop/New folder (4)/src/components/ProgressBar.js"],"sourcesContent":["import React from 'react';\r\nimport './ProgressBar.css';\r\n\r\nconst ProgressBar = ({ progress, currentQuestion, totalQuestions }) => {\r\n  const getProgressColor = (progress) => {\r\n    if (progress < 30) return '#f44336';\r\n    if (progress < 60) return '#ff9800';\r\n    if (progress < 90) return '#4caf50';\r\n    return '#2196f3';\r\n  };\r\n\r\n  const getProgressMessage = (progress) => {\r\n    if (progress < 20) return 'Just getting started!';\r\n    if (progress < 40) return 'Making good progress!';\r\n    if (progress < 60) return 'Halfway there!';\r\n    if (progress < 80) return 'Almost done!';\r\n    if (progress < 100) return 'Final stretch!';\r\n    return 'Quiz complete!';\r\n  };\r\n\r\n  return (\r\n    <div className=\"progress-container\">\r\n      <div className=\"progress-header\">\r\n        <div className=\"progress-info\">\r\n          <span className=\"progress-text\">\r\n            Progress: {currentQuestion} of {totalQuestions} questions\r\n          </span>\r\n          <span className=\"progress-percentage\">\r\n            {Math.round(progress)}%\r\n          </span>\r\n        </div>\r\n        <div className=\"progress-message\">\r\n          {getProgressMessage(progress)}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"progress-bar-container\">\r\n        <div \r\n          className=\"progress-bar\"\r\n          style={{ \r\n            width: `${progress}%`,\r\n            backgroundColor: getProgressColor(progress)\r\n          }}\r\n        >\r\n          <div className=\"progress-bar-fill\"></div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"progress-steps\">\r\n        {Array.from({ length: totalQuestions }, (_, index) => (\r\n          <div\r\n            key={index}\r\n            className={`progress-step ${\r\n              index < currentQuestion ? 'completed' : \r\n              index === currentQuestion - 1 ? 'current' : 'pending'\r\n            }`}\r\n          >\r\n            <div className=\"step-number\">\r\n              {index < currentQuestion ? '✓' : index + 1}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}