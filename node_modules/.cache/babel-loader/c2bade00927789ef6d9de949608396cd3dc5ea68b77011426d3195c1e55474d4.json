{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samma\\\\OneDrive\\\\Desktop\\\\New folder (4)\\\\src\\\\context\\\\QuizContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizContext = /*#__PURE__*/createContext();\n\n// Quiz state reducer\nconst quizReducer = (state, action) => {\n  var _state$questions$stat;\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case 'SET_QUESTIONS':\n      return {\n        ...state,\n        questions: action.payload,\n        loading: false,\n        error: null,\n        currentQuestionIndex: 0,\n        answers: [],\n        score: 0,\n        timer: 30\n      };\n    case 'SET_ANSWER':\n      const newAnswers = [...state.answers];\n      newAnswers[state.currentQuestionIndex] = {\n        questionIndex: state.currentQuestionIndex,\n        selectedAnswer: action.payload,\n        isCorrect: action.payload === ((_state$questions$stat = state.questions[state.currentQuestionIndex]) === null || _state$questions$stat === void 0 ? void 0 : _state$questions$stat.correct_answer),\n        timeSpent: action.timeSpent || 0\n      };\n      return {\n        ...state,\n        answers: newAnswers,\n        score: newAnswers.filter(answer => answer.isCorrect).length\n      };\n    case 'NEXT_QUESTION':\n      return {\n        ...state,\n        currentQuestionIndex: state.currentQuestionIndex + 1\n      };\n    case 'PREVIOUS_QUESTION':\n      return {\n        ...state,\n        currentQuestionIndex: Math.max(0, state.currentQuestionIndex - 1)\n      };\n    case 'GO_TO_QUESTION':\n      return {\n        ...state,\n        currentQuestionIndex: action.payload\n      };\n    case 'SET_TIMER':\n      return {\n        ...state,\n        timer: action.payload\n      };\n    case 'RESET_QUIZ':\n      return {\n        ...state,\n        questions: [],\n        currentQuestionIndex: 0,\n        answers: [],\n        score: 0,\n        loading: false,\n        error: null,\n        timer: 30\n      };\n    default:\n      return state;\n  }\n};\n\n// Initial state\nconst initialState = {\n  questions: [],\n  currentQuestionIndex: 0,\n  answers: [],\n  score: 0,\n  loading: false,\n  error: null,\n  timer: 30,\n  timeRemaining: 30\n};\nexport const QuizProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(quizReducer, initialState);\n\n  // Don't load quiz data on mount - let each quiz start fresh\n  // This prevents old answers from interfering with new quizzes\n\n  // Save answers to localStorage whenever answers change (debounced)\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      if (state.answers.length > 0) {\n        localStorage.setItem('quizAnswers', JSON.stringify(state.answers));\n        localStorage.setItem('quizScore', state.score.toString());\n      }\n    }, 500); // Debounce to avoid excessive localStorage writes\n\n    return () => clearTimeout(timeoutId);\n  }, [state.answers, state.score]);\n\n  // Timer effect\n  useEffect(() => {\n    let interval = null;\n    if (state.timer > 0 && state.loading === false && state.questions.length > 0) {\n      interval = setInterval(() => {\n        dispatch({\n          type: 'SET_TIMER',\n          payload: state.timer - 1\n        });\n      }, 1000);\n    } else if (state.timer === 0 && state.questions.length > 0) {\n      // Auto-submit when timer runs out\n      const currentQuestion = state.questions[state.currentQuestionIndex];\n      if (currentQuestion && !state.answers[state.currentQuestionIndex]) {\n        dispatch({\n          type: 'SET_ANSWER',\n          payload: null,\n          // No answer selected\n          timeSpent: 30 - state.timer\n        });\n      }\n    }\n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  }, [state.timer, state.loading, state.questions, state.currentQuestionIndex, state.answers]);\n  const value = {\n    ...state,\n    dispatch\n  };\n  return /*#__PURE__*/_jsxDEV(QuizContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = QuizProvider;\nexport const useQuiz = () => {\n  _s2();\n  const context = useContext(QuizContext);\n  if (!context) {\n    throw new Error('useQuiz must be used within a QuizProvider');\n  }\n  return context;\n};\n_s2(useQuiz, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"QuizProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","QuizContext","quizReducer","state","action","_state$questions$stat","type","loading","payload","error","questions","currentQuestionIndex","answers","score","timer","newAnswers","questionIndex","selectedAnswer","isCorrect","correct_answer","timeSpent","filter","answer","length","Math","max","initialState","timeRemaining","QuizProvider","children","_s","dispatch","timeoutId","setTimeout","localStorage","setItem","JSON","stringify","toString","clearTimeout","interval","setInterval","currentQuestion","clearInterval","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useQuiz","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/samma/OneDrive/Desktop/New folder (4)/src/context/QuizContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\n\r\nconst QuizContext = createContext();\r\n\r\n// Quiz state reducer\r\nconst quizReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_LOADING':\r\n      return { ...state, loading: action.payload };\r\n    \r\n    case 'SET_ERROR':\r\n      return { ...state, error: action.payload, loading: false };\r\n    \r\n    case 'SET_QUESTIONS':\r\n      return { \r\n        ...state, \r\n        questions: action.payload, \r\n        loading: false, \r\n        error: null,\r\n        currentQuestionIndex: 0,\r\n        answers: [],\r\n        score: 0,\r\n        timer: 30\r\n      };\r\n    \r\n    case 'SET_ANSWER':\r\n      const newAnswers = [...state.answers];\r\n      newAnswers[state.currentQuestionIndex] = {\r\n        questionIndex: state.currentQuestionIndex,\r\n        selectedAnswer: action.payload,\r\n        isCorrect: action.payload === state.questions[state.currentQuestionIndex]?.correct_answer,\r\n        timeSpent: action.timeSpent || 0\r\n      };\r\n      \r\n      return {\r\n        ...state,\r\n        answers: newAnswers,\r\n        score: newAnswers.filter(answer => answer.isCorrect).length\r\n      };\r\n    \r\n    case 'NEXT_QUESTION':\r\n      return {\r\n        ...state,\r\n        currentQuestionIndex: state.currentQuestionIndex + 1\r\n      };\r\n    \r\n    case 'PREVIOUS_QUESTION':\r\n      return {\r\n        ...state,\r\n        currentQuestionIndex: Math.max(0, state.currentQuestionIndex - 1)\r\n      };\r\n    \r\n    case 'GO_TO_QUESTION':\r\n      return {\r\n        ...state,\r\n        currentQuestionIndex: action.payload\r\n      };\r\n    \r\n    case 'SET_TIMER':\r\n      return {\r\n        ...state,\r\n        timer: action.payload\r\n      };\r\n    \r\n    case 'RESET_QUIZ':\r\n      return {\r\n        ...state,\r\n        questions: [],\r\n        currentQuestionIndex: 0,\r\n        answers: [],\r\n        score: 0,\r\n        loading: false,\r\n        error: null,\r\n        timer: 30\r\n      };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Initial state\r\nconst initialState = {\r\n  questions: [],\r\n  currentQuestionIndex: 0,\r\n  answers: [],\r\n  score: 0,\r\n  loading: false,\r\n  error: null,\r\n  timer: 30,\r\n  timeRemaining: 30\r\n};\r\n\r\nexport const QuizProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(quizReducer, initialState);\r\n\r\n  // Don't load quiz data on mount - let each quiz start fresh\r\n  // This prevents old answers from interfering with new quizzes\r\n\r\n  // Save answers to localStorage whenever answers change (debounced)\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      if (state.answers.length > 0) {\r\n        localStorage.setItem('quizAnswers', JSON.stringify(state.answers));\r\n        localStorage.setItem('quizScore', state.score.toString());\r\n      }\r\n    }, 500); // Debounce to avoid excessive localStorage writes\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, [state.answers, state.score]);\r\n\r\n  // Timer effect\r\n  useEffect(() => {\r\n    let interval = null;\r\n    \r\n    if (state.timer > 0 && state.loading === false && state.questions.length > 0) {\r\n      interval = setInterval(() => {\r\n        dispatch({ type: 'SET_TIMER', payload: state.timer - 1 });\r\n      }, 1000);\r\n    } else if (state.timer === 0 && state.questions.length > 0) {\r\n      // Auto-submit when timer runs out\r\n      const currentQuestion = state.questions[state.currentQuestionIndex];\r\n      if (currentQuestion && !state.answers[state.currentQuestionIndex]) {\r\n        dispatch({ \r\n          type: 'SET_ANSWER', \r\n          payload: null, // No answer selected\r\n          timeSpent: 30 - state.timer\r\n        });\r\n      }\r\n    }\r\n    \r\n    return () => {\r\n      if (interval) {\r\n        clearInterval(interval);\r\n      }\r\n    };\r\n  }, [state.timer, state.loading, state.questions, state.currentQuestionIndex, state.answers]);\r\n\r\n  const value = {\r\n    ...state,\r\n    dispatch\r\n  };\r\n\r\n  return (\r\n    <QuizContext.Provider value={value}>\r\n      {children}\r\n    </QuizContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useQuiz = () => {\r\n  const context = useContext(QuizContext);\r\n  if (!context) {\r\n    throw new Error('useQuiz must be used within a QuizProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}