{"ast":null,"code":"// Performance optimization utilities\nexport const debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\nexport const throttle = (func, limit) => {\n  let inThrottle;\n  return function () {\n    const args = arguments;\n    const context = this;\n    if (!inThrottle) {\n      func.apply(context, args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n};\n\n// Lazy load components\nexport const lazyLoad = importFunc => {\n  return React.lazy(importFunc);\n};\n\n// Preload critical resources\nexport const preloadResources = () => {\n  // Preload fonts\n  const fontLink = document.createElement('link');\n  fontLink.rel = 'preload';\n  fontLink.href = 'https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap';\n  fontLink.as = 'style';\n  document.head.appendChild(fontLink);\n};\n\n// Optimize images\nexport const optimizeImage = (src, width, height) => {\n  return `${src}?w=${width}&h=${height}&q=80&f=webp`;\n};","map":{"version":3,"names":["debounce","func","wait","timeout","executedFunction","args","later","clearTimeout","setTimeout","throttle","limit","inThrottle","arguments","context","apply","lazyLoad","importFunc","React","lazy","preloadResources","fontLink","document","createElement","rel","href","as","head","appendChild","optimizeImage","src","width","height"],"sources":["C:/Users/samma/OneDrive/Desktop/New folder (4)/src/utils/performance.js"],"sourcesContent":["// Performance optimization utilities\r\nexport const debounce = (func, wait) => {\r\n  let timeout;\r\n  return function executedFunction(...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n};\r\n\r\nexport const throttle = (func, limit) => {\r\n  let inThrottle;\r\n  return function() {\r\n    const args = arguments;\r\n    const context = this;\r\n    if (!inThrottle) {\r\n      func.apply(context, args);\r\n      inThrottle = true;\r\n      setTimeout(() => inThrottle = false, limit);\r\n    }\r\n  };\r\n};\r\n\r\n// Lazy load components\r\nexport const lazyLoad = (importFunc) => {\r\n  return React.lazy(importFunc);\r\n};\r\n\r\n// Preload critical resources\r\nexport const preloadResources = () => {\r\n  // Preload fonts\r\n  const fontLink = document.createElement('link');\r\n  fontLink.rel = 'preload';\r\n  fontLink.href = 'https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap';\r\n  fontLink.as = 'style';\r\n  document.head.appendChild(fontLink);\r\n};\r\n\r\n// Optimize images\r\nexport const optimizeImage = (src, width, height) => {\r\n  return `${src}?w=${width}&h=${height}&q=80&f=webp`;\r\n};\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,QAAQ,GAAGA,CAACC,IAAI,EAAEC,IAAI,KAAK;EACtC,IAAIC,OAAO;EACX,OAAO,SAASC,gBAAgBA,CAAC,GAAGC,IAAI,EAAE;IACxC,MAAMC,KAAK,GAAGA,CAAA,KAAM;MAClBC,YAAY,CAACJ,OAAO,CAAC;MACrBF,IAAI,CAAC,GAAGI,IAAI,CAAC;IACf,CAAC;IACDE,YAAY,CAACJ,OAAO,CAAC;IACrBA,OAAO,GAAGK,UAAU,CAACF,KAAK,EAAEJ,IAAI,CAAC;EACnC,CAAC;AACH,CAAC;AAED,OAAO,MAAMO,QAAQ,GAAGA,CAACR,IAAI,EAAES,KAAK,KAAK;EACvC,IAAIC,UAAU;EACd,OAAO,YAAW;IAChB,MAAMN,IAAI,GAAGO,SAAS;IACtB,MAAMC,OAAO,GAAG,IAAI;IACpB,IAAI,CAACF,UAAU,EAAE;MACfV,IAAI,CAACa,KAAK,CAACD,OAAO,EAAER,IAAI,CAAC;MACzBM,UAAU,GAAG,IAAI;MACjBH,UAAU,CAAC,MAAMG,UAAU,GAAG,KAAK,EAAED,KAAK,CAAC;IAC7C;EACF,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMK,QAAQ,GAAIC,UAAU,IAAK;EACtC,OAAOC,KAAK,CAACC,IAAI,CAACF,UAAU,CAAC;AAC/B,CAAC;;AAED;AACA,OAAO,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;EACpC;EACA,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;EAC/CF,QAAQ,CAACG,GAAG,GAAG,SAAS;EACxBH,QAAQ,CAACI,IAAI,GAAG,sFAAsF;EACtGJ,QAAQ,CAACK,EAAE,GAAG,OAAO;EACrBJ,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACP,QAAQ,CAAC;AACrC,CAAC;;AAED;AACA,OAAO,MAAMQ,aAAa,GAAGA,CAACC,GAAG,EAAEC,KAAK,EAAEC,MAAM,KAAK;EACnD,OAAO,GAAGF,GAAG,MAAMC,KAAK,MAAMC,MAAM,cAAc;AACpD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}